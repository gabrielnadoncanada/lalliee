security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Nadmin\WcmBundle\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity: { class: Nadmin\WcmBundle\Entity\User, property: username }
        # used to reload user from session & other features (e.g. switch_user)

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            # les urls auxquels s'appliquent ce firewall, dans ce cas, ce sont toutes les urls
            pattern: ^/

            # La connexion n'est pas requise sur toutes les pages
            # par exemple la page d'accueil
            anonymous: true

            form_login:
                # Le nom de la route de la page de connexion
                check_path: app_login
                # Le nom de la route où se trouve le formulaire de connexion
                # Si un utilisateur tente d'acceder à une page protégée sans en avoir les droits
                # il sera redirigé sur cette page
                login_path: app_login
                # Securisation des formulaires
                csrf_token_generator: security.csrf.token_manager
                # La page par defaut apres une connexion reussie
                default_target_path: wcm_chiens_index

            logout:
                # La route où se trouve le process de deconnexion
                path: app_logout
                # La route sur laquelle doit etre rediriger l'utilisateur apres une deconnexion
                target: app_login

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/admin/login', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/admin/logout', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/admin', roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
